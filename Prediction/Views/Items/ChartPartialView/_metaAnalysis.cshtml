@model Prediction.Models.ChartManual.ManualChart
@{
    @using Prediction.Models.Enums
    Tuple<int, DateTime, double> highestPriceOverall = Model.FindHighestPriceOverall();
    Tuple<int, DateTime, double> lowestPriceOverall = Model.FindLowestPriceOverall();
    List<Tuple<int, DateTime, double>> highestPricesModel = Model.FindHighestPrices();
    List<Tuple<int, DateTime, double>> lowestPricesModel = Model.FindLowestPrices();

    List<int> highestPricesIds = highestPricesModel.Select(x => x.Item1).ToList();
    List<int> lowestPricesIds = lowestPricesModel.Select(x => x.Item1).ToList();
    HashSet<int> lowestPricesHashSet = new HashSet<int>(lowestPricesIds);

    List<int> eligibleIds = highestPricesIds.Where(x => lowestPricesHashSet.Contains(x)).ToList();
}

@if (Model.SelectedItems.Count() > 0 && Model.SelectedItems != null)
{
    <text>
        <p>Highest Price: @highestPriceOverall.Item2 - @highestPriceOverall.Item3</p>
        <p>Lowest Price: @lowestPriceOverall.Item2  - @lowestPriceOverall.Item3</p>
    </text>
}

@if (Model.SelectedItems.Count() > 0 && Model.SelectedItems != null)
{
    foreach(int id in eligibleIds)
    {
        Brand currentBrand = Model.Hardware.Where(x => x.ConfigId == id).Select(x => x.Brand).FirstOrDefault();
        string currentModel = Model.Hardware.Where(x => x.ConfigId == id).Select(x => x.Model).FirstOrDefault();
        
        DateTime highestPriceDateTime = highestPricesModel.Where(x => x.Item1 == id).Select(x => x.Item2).FirstOrDefault();
        DateTime lowestPriceDateTime = lowestPricesModel.Where(x => x.Item1 == id).Select(x => x.Item2).FirstOrDefault();
        
        double highestPrice = highestPricesModel.Where(x => x.Item1 == id).Select(x => x.Item3).FirstOrDefault();
        double lowestPrice = lowestPricesModel.Where(x => x.Item1 == id).Select(x => x.Item3).FirstOrDefault();
        <text>
            <p>
                <b>@(currentBrand.ToString()) @currentModel</b> <br /> 
                Highest Price: @highestPrice -- @highestPriceDateTime <br />
                Lowest Price: @lowestPrice  -- @lowestPriceDateTime
            </p>
        </text>
    }
}