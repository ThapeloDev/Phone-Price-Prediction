@model Prediction.View_Models.Chart.HistoricalChart
@{
    @using Prediction.Models.Chart.Misc;
    ViewData["Title"] = "Info";

    string currentBrand = Model.GetPhoneInfo().Item1.ToString();
    string currentModel = Model.GetPhoneInfo().Item2;

    var chartItem = Model.DrawChart();

    var label = chartItem.Label;
    var fill = chartItem.Fill.ToString().ToLower();
    var borderWidth = chartItem.BorderWidth;
    var data = Newtonsoft.Json.JsonConvert.SerializeObject(chartItem.LstData.Select(x => x.Price).ToList());

}
<h1>Info</h1>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<p>@currentBrand  @currentModel</p>


<canvas id="chart" style="width:100%; height:400px"></canvas>


<label>Back Camera Megapixels:</label>
<label>@Model.Specs.BackCameraMegapixel</label>
<br />
<label>Can record video:</label>
<label>@Model.Specs.CanRecordVideo</label>
<br />
<label>Original Price:</label>
<label>@Model.Specs.OriginalPrice</label>

@section Scripts {
    <script type="text/javascript">

    var labels =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(chartItem.LstData.Select(x => x.Date.Month.ToString() + "/" + x.Date.Year.ToString()).ToList()));

    var config = {
        type: 'line',
        options: {
            maintainAspectRatio: true,
            responsive: true,
            stacked: false,
            hoverMode: 'index',
        },
        data: {
            labels: labels,
            datasets: [
                {
                    label: "@(label)",
                    backgroundColor: ['rgba(200, 200, 200, 0.1)'],
                    borderColor: ['rgba(200, 200, 200)'],
                    fill: @(fill),
                    borderWidth: @(borderWidth),
                    data: @Html.Raw(data),
                },
            ],
        }
    };

    var ctx = document.getElementById("chart").getContext("2d");
    new Chart(ctx, config);
    </script>
}