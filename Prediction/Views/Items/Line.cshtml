@model List<Prediction.Models.Chart.ChartItemModel>
@{
    ViewData["Title"] = "Line Chart";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<div class="box-body">
    <div class="chart-container">
        <canvas id="chart" style="width:100%; height:400px"></canvas>
    </div>
</div>

<script type="text/javascript">

    $(function () {
        var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model[0].LstData.Select(x => x.Date).ToList())),
            datasets: [
           @for (int i = 0; i < Model.Count(); i++)
            {
                <text>
                {
                    label: "@(Model[i].Label)",
                    backgroundColor: ['rgba(@(Model[i].BackgroundColor.R.ToString()), @(Model[i].BackgroundColor.G.ToString()), @(Model[i].BackgroundColor.B.ToString()), 0.1)'],
                    borderColor: ['rgba(@(Model[i].BorderColor.R.ToString()), @(Model[i].BorderColor.G.ToString()), @(Model[i].BackgroundColor.B.ToString()))'],
                    fill: @(Model[i].Fill.ToString().ToLower()),
                    borderWidth: @(Model[i].BorderWidth),
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model[i].LstData.Select(x => x.Price).ToList()))
                },
                </text>
            }]
        };

        var options = {
            maintainAspectRatio: false,
            responsive: true,
            stacked: false,
            hoverMode: 'index',
        };

        var myChart = new  Chart(ctx, {
            options: options,
            data: data,
            type:'line'
        });
    });
</script>  